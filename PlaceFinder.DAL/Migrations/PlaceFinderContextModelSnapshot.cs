// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PlaceFinder.DAL.DbContex;
using PlaceFinder.DAL.Models;

namespace PlaceFinder.DAL.Migrations
{
    [DbContext(typeof(PlaceFinderContext))]
    partial class PlaceFinderContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.11-servicing-32099")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("PlaceFinder.DAL.Models.Category", b =>
                {
                    b.Property<int>("Id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<int>("ParentId");

                    b.HasKey("Id");

                    b.HasIndex("ParentId");

                    b.ToTable("Category");
                });

            modelBuilder.Entity("PlaceFinder.DAL.Models.Client", b =>
                {
                    b.Property<int>("Id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.HasKey("Id");

                    b.ToTable("Client");
                });

            modelBuilder.Entity("PlaceFinder.DAL.Models.Place", b =>
                {
                    b.Property<int>("Id");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(500);

                    b.Property<int>("ClientId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.ToTable("Place");
                });

            modelBuilder.Entity("PlaceFinder.DAL.Models.PlaceProduct", b =>
                {
                    b.Property<int>("Id");

                    b.Property<int>("PlaceId");

                    b.Property<decimal>("Price");

                    b.Property<int>("ProductId");

                    b.HasKey("Id");

                    b.HasIndex("PlaceId");

                    b.HasIndex("ProductId");

                    b.ToTable("PlaceProduct");
                });

            modelBuilder.Entity("PlaceFinder.DAL.Models.Product", b =>
                {
                    b.Property<int>("Id");

                    b.Property<int>("CategoryId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Product");
                });

            modelBuilder.Entity("PlaceFinder.DAL.Models.User", b =>
                {
                    b.Property<int>("Id");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.HasKey("Id");

                    b.ToTable("User");
                });

            modelBuilder.Entity("PlaceFinder.DAL.Models.Category", b =>
                {
                    b.HasOne("PlaceFinder.DAL.Models.Category", "Parent")
                        .WithMany("InverseParent")
                        .HasForeignKey("ParentId")
                        .HasConstraintName("FK_Category_Category");
                });

            modelBuilder.Entity("PlaceFinder.DAL.Models.Place", b =>
                {
                    b.HasOne("PlaceFinder.DAL.Models.Client", "Client")
                        .WithMany("Place")
                        .HasForeignKey("ClientId")
                        .HasConstraintName("FK_Place_Client");
                });

            modelBuilder.Entity("PlaceFinder.DAL.Models.PlaceProduct", b =>
                {
                    b.HasOne("PlaceFinder.DAL.Models.Place", "Place")
                        .WithMany("PlaceProduct")
                        .HasForeignKey("PlaceId")
                        .HasConstraintName("FK_PlaceProduct_Place");

                    b.HasOne("PlaceFinder.DAL.Models.Product", "Product")
                        .WithMany("PlaceProduct")
                        .HasForeignKey("ProductId")
                        .HasConstraintName("FK_PlaceProduct_Product");
                });

            modelBuilder.Entity("PlaceFinder.DAL.Models.Product", b =>
                {
                    b.HasOne("PlaceFinder.DAL.Models.Category", "Category")
                        .WithMany("Product")
                        .HasForeignKey("CategoryId")
                        .HasConstraintName("FK_Product_Category");
                });
#pragma warning restore 612, 618
        }
    }
}
